<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2020/9/1
 * Time: 15:07
 */
namespace app\index\controller;
use app\common\service\ToolService;
use think\Db;
use think\Exception;

/**
 * 登录/注册入口
 * Class Login
 * @package app\index\controller
 */
class Login extends Base
{

    public function initialize()
   {
       parent::initialize(); // TODO: Change the autogenerated stub
       if (session('userinfo')) {
           $this->redirect('index/index/index');
       }
   }

    /**
     * 微信登录页
     * @throws Exception
     */
    public function wechat()
    {
        try{
            $state = md5(uniqid(rand(), TRUE));
            session('wei_state',$state);
            $config = [
                'appid' => config('wechat.OAuth.appid'),    //微信登录appid
                'redirect_uri' => urlencode(config('wechat.OAuth.callback')),   //微信登录回调地址
                'response_type' => 'code',
                'scope' => 'snsapi_login',
                'state' => $state,
            ];

            $login_url =  ToolService::combineURL(config('wechat.OAuth.qrconnect'), $config);

            return  header("Location:$login_url");
        }catch (\Exception $e)
        {
            throw new Exception($e->getMessage());
        }
    }

    /**
     * 微信登录操作
     */
    public function wechatDo()
    {
        $param = $this->request->get();

        if (empty($param['state']) || $param['state'] != session('wei_state'))
        {
            throw new Exception('The state does not match. You may be a victim of CSRF.');
        }

        if (empty($param['code']))
        {
            throw new Exception('not code');
        }

        $code = $param['code'];

        //获得access_token
        $config = [
            'appid' => config('wechat.OAuth.appid'),
            'secret' => config('wechat.OAuth.secret'),
            'code' => $code,
            'grant_type' => 'authorization_code',
        ];

        $result = ToolService::get(config('wechat.OAuth.access_token_url'),$config);

        $result = json_decode($result,true);

        if (isset($result['errcode']) && $result['errcode'] != '')
        {
            throw new Exception($result['errmsg']);
        }

        //获取到unionid
        $unionid = $result['unionid'];

        //获取到access_token
        $access_token = $result['access_token'];

        //获取到openid
        $openid = $result['openid'];

        $config = [
            'access_token' => $access_token,
            'openid' => $openid,
        ];

        //获取到用户信息
        $user = ToolService::get(config('wechat.OAuth.userinfo'),$config);

        if (isset($user['errcode']) && $user['errcode'] != '')
        {
            throw new Exception($user['errmsg']);
        }

        /**
         * nickname 昵称
         * headimgurl 头像
         */
        $wei_user = json_decode($user,true);

        //判断是否有账号
        $user = Db::name('study_user')->where(['unionid' => $unionid])->find();

        /**
         * 1 您的账号未绑定手机请先绑定手机。
         * 2 您的账号已被禁用，如有疑问请联系管客服。
         * 3 您的账号已被注销，如有疑问请联系管客服。
         */
        if ($user)  //有账户直接登录
        {
            if ($user['status'] != 1)
            {
                $this->redirect('index/login/index?msg=2');
            }

            if ($user['is_deleted'] != 0)
            {
                $this->redirect(url('index/login/index').'?msg=3 ');
            }
            $login_at = date('Y-m-d H:i:s');
            Db::name('study_user')->where(['unionid' => $unionid])->update([
                'login_at' => $login_at,
            ]);
            $user['login_at'] = $login_at;
            session('userinfo',$user);
            $this->redirect('index/index/index');
        }

        //微信登录
        session('wei_unionid',$unionid);
        session('wei_openid',$openid);
        session('wei_nickname',$wei_user['nickname']);
        session('wei_headimgurl',$wei_user['headimgurl']);
        $this->redirect(url('index/login/index').'?msg=1');
    }
}
